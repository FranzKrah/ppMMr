{
    "collab_server" : "",
    "contents" : "################################################\n## This code is part of the Rpackage ppMMr    ##\n## Franz-S. Krah; Leonie Schmid               ##\n## 24 - 05 - 2018                             ##\n################################################\n\n#' Second step after MotionMeerkat\n#' @param path a character string specifying the path of the motion detection project with folders being MotionMeerkat folders\n#' @param batch number of frames after which to write to file\n#' @param query.text a character string, e.g. \"Animal? (no = 0/ yes = 1/ unclear = 2)\"\n#' @return does not return, but saves to project folder, see \\link{read.motion.table}\n#' @importFrom plyr round_any\n#' @import stringr\n#' @export\n\n\nremove_non_animal  <- function(path, batch = 1000,\n  query.text = \"Animal? (no = 0/ yes = 1/ unclear = 2); Consider top left red square!\"){\n\n\n  # load motion table\n  mo_tab <- read_motion_table(path)\n\n  # reduce to hits on user-defined target\n  inside.new <- inside <- which(mo_tab$inside==1)\n\n  ## continue where stopped if some batches run already\n  if(length(grep(\"animal\", names(mo_tab)))>0){\n    done <- which(!is.na(mo_tab$animal))\n    inside.new <- inside[!inside %in% done]\n  }\n\n  # redirect coords\n  coords <- mo_tab[, grep(\"x1|x2|y1|y2\", names(mo_tab))]\n\n  # define batches\n  if(length(inside) == length(inside.new)){\n    batch <- split(inside.new, ceiling(seq_along(inside.new)/batch))\n  }\n\n  # run loop\n  if(length(grep(\"animal\", names(mo_tab)))==0){\n    mo_tab$animal <- NA\n  }\n  for(j in 1:length(batch)){\n    type1error <- list()\n    for(i in batch[[j]]){\n      cat(which(inside %in% i), \" \")\n\n      enter <- is.animal(path =\n          paste0(mo_tab$path[i], mo_tab$path.sub[i]),\n        frame_nr = mo_tab$Frame[i],\n        coord = coords[i,], query.text = query.text)\n      mo_tab$animal[i] <- as.numeric(enter)\n    }\n\n    out <- list.files(path)\n    out <- paste(path, out[grep(\"motion_table\", out)], sep =\"/\")\n\n    dates <-  as.Date(str_extract(out, \"\\\\d*-\\\\d*-\\\\d*\"))\n    coldate <- Sys.Date()\n    out <- out[which(abs(coldate-dates) == min(abs(coldate - dates)))]\n    write.table(mo_tab, sep =\";\", row.names = FALSE, col.names = TRUE, append = FALSE, file = out)\n    cat(j, \"batches done \\n\")\n\n\n    # ask user to stop or continue\n    if(i < max(inside)){\n    cont <- readkey(\"Want to continue with next batch? (y/n)\")\n    if(cont == \"n\")\n      break\n    }\n  }\n}",
    "created" : 1524571422590.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "24193117",
    "id" : "FA785D06",
    "lastKnownWriteTime" : 1524591200,
    "last_content_update" : 1524591200523,
    "path" : "~/Documents/R/pkgs/ppMMr/R/remove_non_animal.R",
    "project_path" : "R/remove_non_animal.R",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}